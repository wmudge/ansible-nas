"use strict";(self.webpackChunkansible_nas=self.webpackChunkansible_nas||[]).push([[7799],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},966:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={title:"Bitwarden(_rs)"},o=void 0,l={unversionedId:"applications/other/bitwarden",id:"applications/other/bitwarden",title:"Bitwarden(_rs)",description:"Homepage:",source:"@site/docs/applications/other/bitwarden.md",sourceDirName:"applications/other",slug:"/applications/other/bitwarden",permalink:"/docs/applications/other/bitwarden",draft:!1,editUrl:"https://github.com/davestephens/ansible-nas/tree/master/website/docs/applications/other/bitwarden.md",tags:[],version:"current",frontMatter:{title:"Bitwarden(_rs)"},sidebar:"tutorialSidebar",previous:{title:"Other",permalink:"/docs/category/other"},next:{title:"Firefly III",permalink:"/docs/applications/other/firefly"}},p={},s=[{value:"Usage",id:"usage",level:2},{value:"Specific Configuration",id:"specific-configuration",level:2}],c={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Homepage: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/dani-garcia/bitwarden_rs"},"https://github.com/dani-garcia/bitwarden_rs")),(0,a.kt)("p",null,"Bitwarden: ",(0,a.kt)("a",{parentName:"p",href:"https://bitwarden.com/"},"https://bitwarden.com/")),(0,a.kt)("p",null,"This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Set ",(0,a.kt)("inlineCode",{parentName:"p"},"bitwarden_enabled: true")," in your ",(0,a.kt)("inlineCode",{parentName:"p"},"inventories/<your_inventory>/nas.yml")," file."),(0,a.kt)("h2",{id:"specific-configuration"},"Specific Configuration"),(0,a.kt)("p",null,"Make sure you set your admin token! It is ",(0,a.kt)("inlineCode",{parentName:"p"},"bitwarden_admin_token")," in ",(0,a.kt)("inlineCode",{parentName:"p"},"group_vars/all.yml")," file. The string you put here will be the login to the admin section of your Bitwarden installation (",(0,a.kt)("a",{parentName:"p",href:"https://bitwarden.ansiblenasdomain.tld/admin"},"https://bitwarden.ansiblenasdomain.tld/admin"),"). This token can be anything, but it's recommended to use a long, randomly generated string of characters, for example running:\n",(0,a.kt)("inlineCode",{parentName:"p"},"openssl rand -base64 48"),"."),(0,a.kt)("p",null,"To create a user, you need to set ",(0,a.kt)("inlineCode",{parentName:"p"},"bitwarden_allow_signups")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," in your ",(0,a.kt)("inlineCode",{parentName:"p"},"all.yml"),", and re-run the playbook to reprovision the container. Once you've created your users, set ",(0,a.kt)("inlineCode",{parentName:"p"},"bitwarden_allow_signups")," back to ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," and run again."),(0,a.kt)("p",null,"For speed you can target just Bitwarden by appending ",(0,a.kt)("inlineCode",{parentName:"p"},"-t bitwarden")," to your ",(0,a.kt)("inlineCode",{parentName:"p"},"ansible-playbook")," command."))}d.isMDXComponent=!0}}]);